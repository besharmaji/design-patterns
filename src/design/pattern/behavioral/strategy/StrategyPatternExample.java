package design.pattern.behavioral.strategy;

public class StrategyPatternExample {
    public static void main(String[] args) {
        TravelContext context = new TravelContext();

        // Choosing to travel by Car
        context.setTravelStrategy(new CarTravel());
        context.startJourney();

        // Switching to Bike
        context.setTravelStrategy(new BikeTravel());
        context.startJourney();
    }
}

/*ðŸ¤” Why Use This Pattern?
âœ… Removes if-else conditions (No need to check if(car) {} or if(bus) {} everywhere).
âœ… Easily extendable (Add a new travel mode like "Train" ðŸš†and Bus ðŸšŒ without modifying existing code).
âœ… More flexible (Change behavior at runtime).

ðŸ’¡ Simple Rule: If you need to switch between multiple behaviors dynamically, Strategy Pattern is the best fit! ðŸš€
* */