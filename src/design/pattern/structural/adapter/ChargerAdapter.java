package design.pattern.structural.adapter;

public class ChargerAdapter implements USBTypeC {
    private final OldCharger oldCharger;

    public ChargerAdapter(OldCharger oldCharger) {
        this.oldCharger = oldCharger;
    }

    @Override
    public void chargeLaptop() {
        System.out.println("Adapter converting USB-A to USB-C...");
        oldCharger.chargeWithUSBA(); // Delegating call to old charger
    }
}

/*ðŸ¤” Why Use Adapter Pattern?
âœ… Allows compatibility between incompatible interfaces â†’ No need to modify existing code.
âœ… Helps reuse existing code â†’ Use old systems with new ones.
âœ… Follows Open-Closed Principle â†’ You can extend behavior without modifying existing classes.
âœ… Decouples code â†’ The system does not need to know about the old chargerâ€™s details.
* */
